#########################################################################################################
####		mbed_lpc1768_gcc_cs.name=mbed lpc1768 boards by gcc_cs
####		mbed_lpc1768_gcc_cs.upload.protocol=copy
####		mbed_lpc1768_gcc_cs.upload.tool=mbed_cp
####		mbed_lpc1768_gcc_cs.build.mcu=cortex-m3
####		mbed_lpc1768_gcc_cs.build.cpu=LPC1768
####		
####		mbed_lpc1768_gcc_cs.build.architecture=arm-none-eabi
####		mbed_lpc1768_gcc_cs.build.command.gcc=arm-none-eabi-gcc
####		mbed_lpc1768_gcc_cs.build.command.g++=arm-none-eabi-g++
####		mbed_lpc1768_gcc_cs.build.command.ar=arm-none-eabi-ar
####		mbed_lpc1768_gcc_cs.build.command.objcopy=arm-none-eabi-objcopy
####		mbed_lpc1768_gcc_cs.build.command.objdump=arm-none-eabi-objdump
####		mbed_lpc1768_gcc_cs.build.command.size=arm-none-eabi-size
####		
####		mbed_lpc1768_gcc_cs.build.core=mbed
####		mbed_lpc1768_gcc_cs.build.variant=xbed1.0_lpc1768_gcc_cs
####		
####		mbed_lpc1768_gcc_cs.build.CC_FLAGS= -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -mcpu=cortex-m3 -mthumb -ffunction-sections -fdata-sections 
####		mbed_lpc1768_gcc_cs.build.ONLY_C_FLAGS= -std=gnu99
####		mbed_lpc1768_gcc_cs.build.ONLY_CPP_FLAGS= -std=gnu++98
####		mbed_lpc1768_gcc_cs.build.CC_SYMBOLS = -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTOOLCHAIN_GCC_CS -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 
####		mbed_lpc1768_gcc_cs.build.LD_FLAGS = -mcpu=cortex-m3 -mthumb -Wl,--gc-sections
####		mbed_lpc1768_gcc_cs.build.LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc
####		
####		mbed_lpc1768_gcc_cs.build.ldscript=hardware/mbed/variants/xbed1.0_lpc1768_gcc_cs/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_CS/LPC1768.ld
####		
####		mbed_lpc1768_gcc_cs.build.use_archiver=false
####		mbed_lpc1768_gcc_cs.recipe.S.o.pattern="{compiler.gcc_cs.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS}   {includes} "{source_file}" -o "{object_file}"
####		mbed_lpc1768_gcc_cs.recipe.c.o.pattern="{compiler.gcc_cs.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
####		mbed_lpc1768_gcc_cs.recipe.cpp.o.pattern="{compiler.gcc_cs.path}arm-none-eabi-g++" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_CPP_FLAGS} {includes} "{source_file}" -o "{object_file}"
####		mbed_lpc1768_gcc_cs.recipe.ar.pattern="{compiler.gcc_cs.path}arm-none-eabi-ar" -r "{build.path}/{archive_file}" {object_file} 
####		mbed_lpc1768_gcc_cs.recipe.c.combine.pattern="{compiler.gcc_cs.path}arm-none-eabi-gcc" {build.LD_FLAGS}  "-T{runtime.ide.path}/{build.ldscript}" -o "{build.path}/{build.project_name}.elf" {object_files} -L"{build.path}" -L"{runtime.ide.path}/hardware/mbed/variants/xbed1.0_lpc1768_gcc_cs/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_CS" {build.LD_SYS_LIBS}
####		#mbed_lpc1768_gcc_cs.recipe.objcopy.eep.pattern="{compiler.gcc_cs.path}arm-none-eabi-objcopy"  -Obinary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.eep"
####		mbed_lpc1768_gcc_cs.recipe.objcopy.bin.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Obinary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
####		mbed_lpc1768_gcc_cs.recipe.objcopy.hex.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Oihex "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
####		mbed_lpc1768_gcc_cs.recipe.size.pattern="{compiler.gcc_cs.path}arm-none-eabi-size" -A "{build.path}/{build.project_name}.elf"

###################################################################################################################

xbed_lpc1768_gcc_arm.name=xbed  lpc1768 make by gcc_arm and upload by flashmagic 
xbed_lpc1768_gcc_arm.upload.protocol=flashmagic
xbed_lpc1768_gcc_arm.upload.tool=mbed_fm
xbed_lpc1768_gcc_arm.build.mcu=cortex-m3
xbed_lpc1768_gcc_arm.build.cpu=LPC1768

xbed_lpc1768_gcc_arm.build.architecture=arm-none-eabi
xbed_lpc1768_gcc_arm.build.command.as=arm-none-eabi-as
xbed_lpc1768_gcc_arm.build.command.gcc=arm-none-eabi-gcc
xbed_lpc1768_gcc_arm.build.command.g++=arm-none-eabi-g++
xbed_lpc1768_gcc_arm.build.command.ar=arm-none-eabi-ar
xbed_lpc1768_gcc_arm.build.command.objcopy=arm-none-eabi-objcopy
xbed_lpc1768_gcc_arm.build.command.objdump=arm-none-eabi-objdump
xbed_lpc1768_gcc_arm.build.command.size=arm-none-eabi-size

xbed_lpc1768_gcc_arm.build.core=mbed
xbed_lpc1768_gcc_arm.build.variant=xbed1.0_lpc1768_gcc_arm


xbed_lpc1768_gcc_arm.build.CC_FLAGS= -mcpu=cortex-m3 -mthumb -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections 
xbed_lpc1768_gcc_arm.build.ONLY_C_FLAGS= -std=gnu99
xbed_lpc1768_gcc_arm.build.ONLY_CPP_FLAGS= -std=gnu++98
xbed_lpc1768_gcc_arm.build.CC_SYMBOLS = -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 
xbed_lpc1768_gcc_arm.build.LD_FLAGS =  -mcpu=cortex-m3 -mthumb -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float
xbed_lpc1768_gcc_arm.build.LD_SYS_LIBS =  -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys

xbed_lpc1768_gcc_arm.build.ldscript=hardware/mbed/variants/xbed1.0_lpc1768_gcc_arm/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM/LPC1768.ld



xbed_lpc1768_gcc_arm.build.use_archiver=false
xbed_lpc1768_gcc_arm.recipe.S.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
xbed_lpc1768_gcc_arm.recipe.c.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
xbed_lpc1768_gcc_arm.recipe.cpp.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-g++" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_CPP_FLAGS} {includes} "{source_file}" -o "{object_file}"
xbed_lpc1768_gcc_arm.recipe.ar.pattern="{compiler.gcc_arm.path}arm-none-eabi-ar" -r "{build.path}/{archive_file}" {object_file} 
xbed_lpc1768_gcc_arm.recipe.c.combine.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.LD_FLAGS}  "-T{runtime.ide.path}/{build.ldscript}" -o "{build.path}/{build.project_name}.elf" {object_files} -L"{build.path}" -L"{runtime.ide.path}/hardware/mbed/variants/xbed1.0_lpc1768_gcc_arm/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM" {build.LD_SYS_LIBS}
xbed_lpc1768_gcc_arm.recipe.objcopy.bin.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Obinary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
xbed_lpc1768_gcc_arm.recipe.objcopy.hex.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Oihex "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
xbed_lpc1768_gcc_arm.recipe.size.pattern="{compiler.gcc_arm.path}arm-none-eabi-size" -A "{build.path}/{build.project_name}.elf"
###################################################################################################################

mbed_lpc1768_gcc_arm.name=mbed lpc1768 make by gcc_arm and upload by copy 
mbed_lpc1768_gcc_arm.upload.protocol=flashmagic
mbed_lpc1768_gcc_arm.upload.tool=mbed_fm
mbed_lpc1768_gcc_arm.build.mcu=cortex-m3
mbed_lpc1768_gcc_arm.build.cpu=LPC1768

mbed_lpc1768_gcc_arm.build.architecture=arm-none-eabi
mbed_lpc1768_gcc_arm.build.command.as=arm-none-eabi-as
mbed_lpc1768_gcc_arm.build.command.gcc=arm-none-eabi-gcc
mbed_lpc1768_gcc_arm.build.command.g++=arm-none-eabi-g++
mbed_lpc1768_gcc_arm.build.command.ar=arm-none-eabi-ar
mbed_lpc1768_gcc_arm.build.command.objcopy=arm-none-eabi-objcopy
mbed_lpc1768_gcc_arm.build.command.objdump=arm-none-eabi-objdump
mbed_lpc1768_gcc_arm.build.command.size=arm-none-eabi-size

mbed_lpc1768_gcc_arm.build.core=mbed
mbed_lpc1768_gcc_arm.build.variant=xbed1.0_lpc1768_gcc_arm


mbed_lpc1768_gcc_arm.build.CC_FLAGS= -mcpu=cortex-m3 -mthumb -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections 
mbed_lpc1768_gcc_arm.build.ONLY_C_FLAGS= -std=gnu99
mbed_lpc1768_gcc_arm.build.ONLY_CPP_FLAGS= -std=gnu++98
mbed_lpc1768_gcc_arm.build.CC_SYMBOLS = -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 
mbed_lpc1768_gcc_arm.build.LD_FLAGS =  -mcpu=cortex-m3 -mthumb -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float
mbed_lpc1768_gcc_arm.build.LD_SYS_LIBS =  -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys

mbed_lpc1768_gcc_arm.build.ldscript=hardware/mbed/variants/xbed1.0_lpc1768_gcc_arm/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM/LPC1768.ld



mbed_lpc1768_gcc_arm.build.use_archiver=false
mbed_lpc1768_gcc_arm.recipe.S.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
mbed_lpc1768_gcc_arm.recipe.c.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
mbed_lpc1768_gcc_arm.recipe.cpp.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-g++" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_CPP_FLAGS} {includes} "{source_file}" -o "{object_file}"
mbed_lpc1768_gcc_arm.recipe.ar.pattern="{compiler.gcc_arm.path}arm-none-eabi-ar" -r "{build.path}/{archive_file}" {object_file} 
mbed_lpc1768_gcc_arm.recipe.c.combine.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.LD_FLAGS}  "-T{runtime.ide.path}/{build.ldscript}" -o "{build.path}/{build.project_name}.elf" {object_files} -L"{build.path}" -L"{runtime.ide.path}/hardware/mbed/variants/xbed1.0_lpc1768_gcc_arm/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM" {build.LD_SYS_LIBS}
mbed_lpc1768_gcc_arm.recipe.objcopy.bin.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Obinary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
mbed_lpc1768_gcc_arm.recipe.objcopy.hex.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Oihex "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
mbed_lpc1768_gcc_arm.recipe.size.pattern="{compiler.gcc_arm.path}arm-none-eabi-size" -A "{build.path}/{build.project_name}.elf"
###################################################################################################################

mbed_kl25z_gcc_arm.name=Freescale FRDM-KL25Z mbed boards by gcc_arm
mbed_kl25z_gcc_arm.upload.protocol=copy
mbed_kl25z_gcc_arm.upload.tool=mbed_cp
mbed_kl25z_gcc_arm.build.mcu=cortex-m0plus
#mbed_kl25z_gcc_arm.build.cpu=MKL25Z128VLK4

mbed_kl25z_gcc_arm.build.architecture=arm-none-eabi
mbed_kl25z_gcc_arm.build.command.as=arm-none-eabi-as
mbed_kl25z_gcc_arm.build.command.gcc=arm-none-eabi-gcc
mbed_kl25z_gcc_arm.build.command.g++=arm-none-eabi-g++
mbed_kl25z_gcc_arm.build.command.ar=arm-none-eabi-ar
mbed_kl25z_gcc_arm.build.command.objcopy=arm-none-eabi-objcopy
mbed_kl25z_gcc_arm.build.command.objdump=arm-none-eabi-objdump
mbed_kl25z_gcc_arm.build.command.size=arm-none-eabi-size

mbed_kl25z_gcc_arm.build.core=mbed
mbed_kl25z_gcc_arm.build.variant=mbed_kl25z_gcc_arm


mbed_kl25z_gcc_arm.build.CC_FLAGS= -mcpu=cortex-m0plus -mthumb -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections
mbed_kl25z_gcc_arm.build.ONLY_C_FLAGS= -std=gnu99
mbed_kl25z_gcc_arm.build.ONLY_CPP_FLAGS= -std=gnu++98
mbed_kl25z_gcc_arm.build.CC_SYMBOLS = -DTARGET_KL25Z -DTARGET_M0P -DTARGET_Freescale -DTARGET_KLXX -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M0PLUS -DARM_MATH_CM0PLUS -DMBED_BUILD_TIMESTAMP=1392857791.93 -D__MBED__=1   
mbed_kl25z_gcc_arm.build.LD_FLAGS =  -mcpu=cortex-m0plus -mthumb -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float
mbed_kl25z_gcc_arm.build.LD_SYS_LIBS =  -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys

mbed_kl25z_gcc_arm.build.ldscript=hardware/mbed/variants/mbed_kl25z_gcc_arm/cmsis/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/TOOLCHAIN_GCC_ARM/MKL25Z4.ld



mbed_kl25z_gcc_arm.build.use_archiver=false
mbed_kl25z_gcc_arm.recipe.S.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
mbed_kl25z_gcc_arm.recipe.c.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
mbed_kl25z_gcc_arm.recipe.cpp.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-g++" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_CPP_FLAGS} {includes} "{source_file}" -o "{object_file}"
mbed_kl25z_gcc_arm.recipe.ar.pattern="{compiler.gcc_arm.path}arm-none-eabi-ar" -r "{build.path}/{archive_file}" {object_file} 
mbed_kl25z_gcc_arm.recipe.c.combine.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.LD_FLAGS}  "-T{runtime.ide.path}/{build.ldscript}" -o "{build.path}/{build.project_name}.elf" {object_files} -L"{build.path}" -L"{runtime.ide.path}/hardware/mbed/variants/mbed_kl25z_gcc_arm/cmsis/TARGET_Freescale/TARGET_KLXX/TARGET_KL25Z/TOOLCHAIN_GCC_ARM" {build.LD_SYS_LIBS}
mbed_kl25z_gcc_arm.recipe.objcopy.bin.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Obinary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
mbed_kl25z_gcc_arm.recipe.objcopy.hex.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Oihex "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
mbed_kl25z_gcc_arm.recipe.size.pattern="{compiler.gcc_arm.path}arm-none-eabi-size" -A "{build.path}/{build.project_name}.elf"


###################################################################################################################

xbed_nrf51822_gcc_arm.name=xbed nrf51822  boards by gcc_arm
xbed_nrf51822_gcc_arm.upload.protocol=flash
xbed_nrf51822_gcc_arm.upload.tool=flash
xbed_nrf51822_gcc_arm.build.mcu=cortex-m0
xbed_nrf51822_gcc_arm.build.cpu=NRF51

xbed_nrf51822_gcc_arm.build.architecture=arm-none-eabi
xbed_nrf51822_gcc_arm.build.command.as=arm-none-eabi-as
xbed_nrf51822_gcc_arm.build.command.gcc=arm-none-eabi-gcc
xbed_nrf51822_gcc_arm.build.command.g++=arm-none-eabi-g++
xbed_nrf51822_gcc_arm.build.command.ar=arm-none-eabi-ar
xbed_nrf51822_gcc_arm.build.command.objcopy=arm-none-eabi-objcopy
xbed_nrf51822_gcc_arm.build.command.objdump=arm-none-eabi-objdump
xbed_nrf51822_gcc_arm.build.command.size=arm-none-eabi-size

xbed_nrf51822_gcc_arm.build.core=mbed
xbed_nrf51822_gcc_arm.build.variant=xbed1.0_nrf51822_gcc_arm


xbed_nrf51822_gcc_arm.build.CC_FLAGS= -mcpu=cortex-m0 -mthumb -mthumb -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections  -mabi=aapcs -mfloat-abi=soft -Werror
xbed_nrf51822_gcc_arm.build.ONLY_C_FLAGS= -std=gnu99
xbed_nrf51822_gcc_arm.build.ONLY_CPP_FLAGS= -std=gnu++98
xbed_nrf51822_gcc_arm.build.CC_SYMBOLS = -DTARGET_NRF51822  -DTARGET_M0 -DNRF51 -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M0 -DARM_MATH_CM0 -DMBED_BUILD_TIMESTAMP=1392857791.93 -D__MBED__=1
xbed_nrf51822_gcc_arm.build.LD_FLAGS = -mcpu=cortex-m0 -mthumb  -Wl,--gc-sections 
xbed_nrf51822_gcc_arm.build.LD_SYS_LIBS =  -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys 
xbed_nrf51822_gcc_arm.build.ldscript=hardware/mbed/variants/xbed1.0_nrf51822_gcc_arm/cmsis/TARGET_NORDIC/TARGET_NRF51822/TOOLCHAIN_GCC_ARM/gcc_nrf51_s110_xxaa.ld



xbed_nrf51822_gcc_arm.build.use_archiver=false
xbed_nrf51822_gcc_arm.recipe.S.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc"  -x assembler-with-cpp {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
xbed_nrf51822_gcc_arm.recipe.c.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
xbed_nrf51822_gcc_arm.recipe.cpp.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-g++" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_CPP_FLAGS} {includes} "{source_file}" -o "{object_file}"
xbed_nrf51822_gcc_arm.recipe.ar.pattern="{compiler.gcc_arm.path}arm-none-eabi-ar" -r "{build.path}/{archive_file}" {object_file} 
xbed_nrf51822_gcc_arm.recipe.c.combine.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.LD_FLAGS}  "-T{runtime.ide.path}/{build.ldscript}" -o "{build.path}/{build.project_name}.elf" {object_files} -L"{build.path}" -L"{runtime.ide.path}/hardware/mbed/variants/xbed1.0_nrf51822_gcc_arm/cmsis/TARGET_NORDIC/TARGET_NRF51822/TOOLCHAIN_GCC_ARM" {build.LD_SYS_LIBS}
xbed_nrf51822_gcc_arm.recipe.objcopy.bin.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Obinary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
xbed_nrf51822_gcc_arm.recipe.objcopy.hex.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Oihex "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
xbed_nrf51822_gcc_arm.recipe.size.pattern="{compiler.gcc_arm.path}arm-none-eabi-size" -A "{build.path}/{build.project_name}.elf"


###################################################################################################################

mbed_lpc1768_keil.name=mbed lpc1768 boards by keil
mbed_lpc1768_keil.upload.protocol=copy
mbed_lpc1768_keil.upload.tool=mbed_cp
mbed_lpc1768_keil.build.mcu=cortex-m3
mbed_lpc1768_keil.build.cpu=LPC1768


mbed_lpc1768_keil.build.command.as=armas
mbed_lpc1768_keil.build.command.cc=armcc
mbed_lpc1768_keil.build.command.ar=armar
mbed_lpc1768_keil.build.command.link=armlink
mbed_lpc1768_keil.build.command.fromelf=fromelf


mbed_lpc1768_keil.build.core=mbed
mbed_lpc1768_keil.build.variant=xbed1.0_lpc1768_keil

mbed_lpc1768_keil.build.include = -I "{compiler.gcc_arm.path}/RV31/INC" -I "{compiler.gcc_arm.path}/RV31/CMSIS/Include" -I "{compiler.gcc_arm.path}/INC/NXP/LPC17xx"
mbed_lpc1768_keil.build.ldscript=hardware/mbed/variants/xbed1.0_lpc1768_keil/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_ARM_STD/LPC1768.sct

mbed_lpc1768_keil.build.ASM_FLAGS = --cpu Cortex-M3 -g --apcs=interwork {build.include}
mbed_lpc1768_keil.build.CC_FLAGS = -c --cpu Cortex-M3 -g -O0 --apcs=interwork -I.  --gnu  -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTARGET_MBED_LPC1768 -DTOOLCHAIN_ARM_STD -DTOOLCHAIN_ARM -D__CORTEX_M3 -DARM_MATH_CM3  -D__MBED__="1"  {build.include}
mbed_lpc1768_keil.build.LD_FLAGS =  --cpu Cortex-M3 *.o {build.ldscript} --strict --scatter --summary_stderr --info summarysizes --map --xref --callgraph --symbols --info sizes --info totals --info unused --info veneers 






mbed_lpc1768_keil.recipe.S.o.pattern="{compiler.keil.binpath}armas" {build.ASM_FLAGS}  {includes} "{source_file}" -o "{object_file}"
mbed_lpc1768_keil.recipe.c.o.pattern="{compiler.keil.binpath}armcc" {build.CC_FLAGS}  {includes} "{source_file}" -o "{object_file}"
mbed_lpc1768_keil.recipe.cpp.o.pattern="{compiler.keil.binpath}armcc" {build.CC_FLAGS}  {includes} "{source_file}" -o "{object_file}"
mbed_lpc1768_keil.recipe.ar.pattern="{compiler.keil.binpath}armar" -r "{build.path}/{archive_file}" {object_file} 
mbed_lpc1768_keil.recipe.c.combine.pattern="{compiler.keil.binpath}armlink" {build.LD_FLAGS} --list "{build.path}/{build.project_name}.map" -o "{build.path}/{build.project_name}.axf" 
mbed_lpc1768_keil.recipe.objcopy.bin.pattern="{compiler.keil.binpath}fromelf"  --bin "{build.path}/{build.project_name}.bin" "{build.path}/{build.project_name}.axf"
mbed_lpc1768_keil.recipe.objcopy.hex.pattern="{compiler.keil.binpath}fromelf"  --i32 "{build.path}/{build.project_name}.hex" "{build.path}/{build.project_name}.axf"

###################################################################################################################
