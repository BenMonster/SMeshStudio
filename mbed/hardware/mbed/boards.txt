
xbed_lpc1768_gcc_arm.name=SMeshLink xBed_LPC1768 make by gcc_arm and upload by flashmagic 
xbed_lpc1768_gcc_arm.upload.protocol=flashmagic
xbed_lpc1768_gcc_arm.upload.tool=mbed_fm
xbed_lpc1768_gcc_arm.build.mcu=cortex-m3
xbed_lpc1768_gcc_arm.build.cpu=LPC1768

xbed_lpc1768_gcc_arm.build.architecture=arm-none-eabi
xbed_lpc1768_gcc_arm.build.command.as=arm-none-eabi-as
xbed_lpc1768_gcc_arm.build.command.gcc=arm-none-eabi-gcc
xbed_lpc1768_gcc_arm.build.command.g++=arm-none-eabi-g++
xbed_lpc1768_gcc_arm.build.command.ar=arm-none-eabi-ar
xbed_lpc1768_gcc_arm.build.command.objcopy=arm-none-eabi-objcopy
xbed_lpc1768_gcc_arm.build.command.objdump=arm-none-eabi-objdump
xbed_lpc1768_gcc_arm.build.command.size=arm-none-eabi-size

xbed_lpc1768_gcc_arm.build.core=mbed
xbed_lpc1768_gcc_arm.build.variant=xbed1.0_lpc1768_gcc_arm


xbed_lpc1768_gcc_arm.build.CC_FLAGS= -mcpu=cortex-m3 -mthumb -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections 
xbed_lpc1768_gcc_arm.build.ONLY_C_FLAGS= -std=gnu99
xbed_lpc1768_gcc_arm.build.ONLY_CPP_FLAGS= -std=gnu++98
xbed_lpc1768_gcc_arm.build.CC_SYMBOLS = -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 
xbed_lpc1768_gcc_arm.build.LD_FLAGS =  -mcpu=cortex-m3 -mthumb -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float
xbed_lpc1768_gcc_arm.build.LD_SYS_LIBS =  -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys

xbed_lpc1768_gcc_arm.build.ldscript=hardware/mbed/variants/xbed1.0_lpc1768_gcc_arm/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM/LPC1768.ld



xbed_lpc1768_gcc_arm.build.use_archiver=false
xbed_lpc1768_gcc_arm.recipe.S.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
xbed_lpc1768_gcc_arm.recipe.c.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_C_FLAGS}   {includes} "{source_file}" -o "{object_file}"
xbed_lpc1768_gcc_arm.recipe.cpp.o.pattern="{compiler.gcc_arm.path}arm-none-eabi-g++" {build.CC_FLAGS} {build.CC_SYMBOLS} {build.ONLY_CPP_FLAGS} {includes} "{source_file}" -o "{object_file}"
xbed_lpc1768_gcc_arm.recipe.ar.pattern="{compiler.gcc_arm.path}arm-none-eabi-ar" -r "{build.path}/{archive_file}" {object_file} 
xbed_lpc1768_gcc_arm.recipe.c.combine.pattern="{compiler.gcc_arm.path}arm-none-eabi-gcc" {build.LD_FLAGS}  "-T{runtime.ide.path}/{build.ldscript}" -o "{build.path}/{build.project_name}.elf" {object_files} -L"{build.path}" -L"{runtime.ide.path}/hardware/mbed/variants/xbed1.0_lpc1768_gcc_arm/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM" {build.LD_SYS_LIBS}
xbed_lpc1768_gcc_arm.recipe.objcopy.bin.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Obinary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
xbed_lpc1768_gcc_arm.recipe.objcopy.hex.pattern="{compiler.gcc_arm.path}arm-none-eabi-objcopy"  -Oihex "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
xbed_lpc1768_gcc_arm.recipe.size.pattern="{compiler.gcc_arm.path}arm-none-eabi-size" -A "{build.path}/{build.project_name}.elf"
